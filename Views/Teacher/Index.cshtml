@using Microsoft.AspNetCore.Identity
@using schoool_Management.Models
@inject UserManager<ApplicationUser> UserManager

@model List<CourseModel>
@{
    ViewData["Title"] = "Index";
    var isAdmin = User.IsInRole("Admin");
}

<style>
    body {
        background: linear-gradient(to right, #e3f2fd, #fce4ec);
    }

    .page-header {
        font-weight: 600;
        color: #0d47a1;
    }

    .add-course-btn {
        margin-top: -2.5rem;
        margin-bottom: 1rem;
    }

    .course-card {
        width: 18rem;
        border-radius: 15px;
        overflow: hidden;
        transition: transform 0.2s ease-in-out, box-shadow 0.3s;
    }

        .course-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);
        }

    .course-img {
        height: 12rem;
        object-fit: cover;
    }

    .card-title {
        color: #1565c0;
        font-weight: 600;
    }

    .btn-warning, .btn-danger {
        font-size: 0.9rem;
        padding: 0.4rem 1rem;
    }

    .teacher-info {
        font-size: 0.85rem;
        color: #757575;
    }
</style>

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="page-header">
            @(isAdmin ? "All Courses" : "My Courses")
        </h2>
        <a class="btn btn-primary add-course-btn" asp-action="Create" asp-controller="Course">
            + Add Course
        </a>   
    </div>
    

    @if (!Model.Any())
    {
        <p class="text-muted">No courses available.</p>
    }
    else
    {
        <div class="d-flex flex-wrap justify-content-start gap-4">
            @foreach (var course in Model)
            {

                <div class="card shadow course-card" style="cursor: pointer;" data-bs-toggle="modal" data-bs-target="#courseModal" data-course-id="@course.Id">
                    <img class="card-img-top course-img" src="~/images/@course.ImageName" alt="Course image">
                    <div class="card-body">
                        <h5 class="card-title">@course.Name</h5>
                        <p class="card-text">@course.Description</p>
                        <p class="fw-bold text-primary">₹@course.Price</p>

                        @if (isAdmin && course.Teacher != null)
                        {
                            <div class="teacher-info mb-2">
                                <span>Teacher: @course.Teacher.FullName</span><br/>
                            </div>
                        }

                        <div class="d-flex justify-content-between">
                            <a asp-action="Edit" asp-controller="Course" asp-route-id="@course.Id" class="btn btn-warning">Edit</a>
                            <a asp-action="Delete" asp-controller="Course" asp-route-id="@course.Id" class="btn btn-danger">Delete</a>
                        </div>
                    </div>
                </div>

            }
        </div>
    }
</div>


<!-- Modal -->
<div class="modal fade" id="courseModal" tabindex="-1" aria-labelledby="courseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="courseModalLabel">Students Enrolled</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="studentList">
                </div>
            </div>
        </div>
    </div>
</div>




        @section Scripts {
<script>
    var courseModal = document.getElementById('courseModal');
    courseModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var courseId = button.getAttribute('data-course-id');

        var studentListDiv = document.getElementById('studentList');
        studentListDiv.innerHTML = '<p class="text-muted">Loading students...</p>';

        fetch('/Course/GetStudentsByCourseId/' + courseId)
            .then(response => response.json())
            .then(data => {
                if (data.length > 0) {
                    var studentsHtml = '<ul class="list-group">';
                    data.forEach(function (student) {
                        studentsHtml += `<li class="list-group-item">${student.fullName}</li>`;
                    });
                    studentsHtml += '</ul>';
                    studentListDiv.innerHTML = studentsHtml;
                } else {
                    studentListDiv.innerHTML = '<p class="text-muted">No students registered for this course.</p>';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                studentListDiv.innerHTML = '<p class="text-danger">Error loading students.</p>';
            });
    });
</script>
}
